<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-28T17:07:41 IST" name="Default suite" finished-at="2021-04-28T17:10:36 IST" duration-ms="174742">
    <groups>
      <group name="Hotels">
        <method signature="CalculateTripCost.GetHotelScreenShots()[pri:8, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="GetHotelScreenShots" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.HotelDetails()[pri:7, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="HotelDetails" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.LiftAccess()[pri:6, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="LiftAccess" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.NoOfGuests()[pri:4, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="NoOfGuests" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.RatingSort()[pri:5, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="RatingSort" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.SearchDestination()[pri:1, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="SearchDestination" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.ClickHolidayHomesButton()[pri:2, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="ClickHolidayHomesButton" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.SetUrl()[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="SetUrl" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.SetDate()[pri:3, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="SetDate" class="Hackathon.CalculateTripCost"/>
      </group> <!-- Hotels -->
      <group name="Cruises">
        <method signature="CalculateTripCost.SetCruises()[pri:9, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="SetCruises" class="Hackathon.CalculateTripCost"/>
        <method signature="CalculateTripCost.GetCruiseDetails()[pri:10, instance:Hackathon.CalculateTripCost@7bab3f1a]" name="GetCruiseDetails" class="Hackathon.CalculateTripCost"/>
      </group> <!-- Cruises -->
    </groups>
    <test started-at="2021-04-28T17:07:41 IST" name="Default test" finished-at="2021-04-28T17:10:36 IST" duration-ms="174742">
      <class name="Hackathon.CalculateTripCost">
        <test-method is-config="true" signature="SetDrivers()[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:07:31 IST" name="SetDrivers" finished-at="2021-04-28T17:07:41 IST" duration-ms="9626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetDrivers -->
        <test-method signature="SetUrl()[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:07:41 IST" name="SetUrl" finished-at="2021-04-28T17:08:04 IST" duration-ms="22560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUrl -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:04 IST" name="screenShot" finished-at="2021-04-28T17:08:04 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SetUrl status=SUCCESS method=CalculateTripCost.SetUrl()[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="SearchDestination()[pri:1, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:04 IST" name="SearchDestination" finished-at="2021-04-28T17:08:24 IST" duration-ms="20225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchDestination -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:24 IST" name="screenShot" finished-at="2021-04-28T17:08:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchDestination status=SUCCESS method=CalculateTripCost.SearchDestination()[pri:1, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="ClickHolidayHomesButton()[pri:2, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:24 IST" name="ClickHolidayHomesButton" finished-at="2021-04-28T17:08:45 IST" depends-on-methods="Hackathon.CalculateTripCost.SearchDestination" duration-ms="20493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickHolidayHomesButton -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:45 IST" name="screenShot" finished-at="2021-04-28T17:08:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ClickHolidayHomesButton status=SUCCESS method=CalculateTripCost.ClickHolidayHomesButton()[pri:2, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="SetDate()[pri:3, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:45 IST" name="SetDate" finished-at="2021-04-28T17:08:55 IST" duration-ms="10712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetDate -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:55 IST" name="screenShot" finished-at="2021-04-28T17:08:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SetDate status=SUCCESS method=CalculateTripCost.SetDate()[pri:3, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="NoOfGuests()[pri:4, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:55 IST" name="NoOfGuests" finished-at="2021-04-28T17:08:57 IST" duration-ms="1236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoOfGuests -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:57 IST" name="screenShot" finished-at="2021-04-28T17:08:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NoOfGuests status=SUCCESS method=CalculateTripCost.NoOfGuests()[pri:4, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="RatingSort()[pri:5, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:08:57 IST" name="RatingSort" finished-at="2021-04-28T17:09:03 IST" duration-ms="6763" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RatingSort -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:09:03 IST" name="screenShot" finished-at="2021-04-28T17:09:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RatingSort status=SUCCESS method=CalculateTripCost.RatingSort()[pri:5, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="LiftAccess()[pri:6, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:09:03 IST" name="LiftAccess" finished-at="2021-04-28T17:09:05 IST" duration-ms="2038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LiftAccess -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:09:05 IST" name="screenShot" finished-at="2021-04-28T17:09:05 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LiftAccess status=SUCCESS method=CalculateTripCost.LiftAccess()[pri:6, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="HotelDetails()[pri:7, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:09:05 IST" name="HotelDetails" finished-at="2021-04-28T17:09:08 IST" duration-ms="2284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HotelDetails -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:09:08 IST" name="screenShot" finished-at="2021-04-28T17:09:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HotelDetails status=SUCCESS method=CalculateTripCost.HotelDetails()[pri:7, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="GetHotelScreenShots()[pri:8, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:09:08 IST" name="GetHotelScreenShots" finished-at="2021-04-28T17:09:31 IST" duration-ms="23079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetHotelScreenShots -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:09:31 IST" name="screenShot" finished-at="2021-04-28T17:09:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetHotelScreenShots status=SUCCESS method=CalculateTripCost.GetHotelScreenShots()[pri:8, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="SetCruises()[pri:9, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:09:31 IST" name="SetCruises" finished-at="2021-04-28T17:10:34 IST" duration-ms="63496" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="menu-item-17735350"]"}
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'OMKAR', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:2875}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e736f02cd74ed54dad428819bea377d5
*** Element info: {Using=xpath, value=//*[@id="menu-item-17735350"]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="menu-item-17735350"]"}
  (Session info: chrome=90.0.4430.93)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'OMKAR', ip: '192.168.0.104', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.93, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:2875}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e736f02cd74ed54dad428819bea377d5
*** Element info: {Using=xpath, value=//*[@id="menu-item-17735350"]}
at jdk.internal.reflect.GeneratedConstructorAccessor12.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at Functionalities.CruiseDetails.SetCruiseShip(CruiseDetails.java:70)
at Hackathon.CalculateTripCost.SetCruises(CalculateTripCost.java:481)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetCruises -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:10:35 IST" name="screenShot" finished-at="2021-04-28T17:10:36 IST" duration-ms="931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SetCruises status=FAILURE method=CalculateTripCost.SetCruises()[pri:9, instance:Hackathon.CalculateTripCost@7bab3f1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="GetCruiseDetails()[pri:10, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:10:36 IST" name="GetCruiseDetails" finished-at="2021-04-28T17:10:36 IST" depends-on-methods="Hackathon.CalculateTripCost.SetCruises" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method CalculateTripCost.GetCruiseDetails()[pri:10, instance:Hackathon.CalculateTripCost@7bab3f1a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method CalculateTripCost.GetCruiseDetails()[pri:10, instance:Hackathon.CalculateTripCost@7bab3f1a] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetCruiseDetails -->
        <test-method is-config="true" signature="CloseBrowser()[pri:0, instance:Hackathon.CalculateTripCost@7bab3f1a]" started-at="2021-04-28T17:10:37 IST" name="CloseBrowser" finished-at="2021-04-28T17:10:39 IST" duration-ms="1796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- Hackathon.CalculateTripCost -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
